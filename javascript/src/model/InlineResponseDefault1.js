(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['../ApiClient'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'));
  } else {
    // Browser globals (root is window)
    if (!root.RingCentralApi) {
      root.RingCentralApi = {};
    }
    root.RingCentralApi.InlineResponseDefault1 = factory(root.RingCentralApi.ApiClient);
  }
}(this, function(ApiClient) {
  'use strict';

  /**
   * The InlineResponseDefault1 model module.
   * @module model/InlineResponseDefault1
   * @version v1.0
   */

  /**
   * Constructs a new <code>InlineResponseDefault1</code>.
   * @alias module:model/InlineResponseDefault1
   * @class
   */
  var exports = function() {









  };

  /**
   * Constructs a <code>InlineResponseDefault1</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/InlineResponseDefault1} obj Optional instance to populate.
   * @return {module:model/InlineResponseDefault1} The populated <code>InlineResponseDefault1</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) { 
      obj = obj || new exports();

      if (data.hasOwnProperty('endpoint_id')) {
        obj['endpoint_id'] = ApiClient.convertToType(data['endpoint_id'], 'String');
      }
      if (data.hasOwnProperty('scope')) {
        obj['scope'] = ApiClient.convertToType(data['scope'], 'String');
      }
      if (data.hasOwnProperty('owner_id')) {
        obj['owner_id'] = ApiClient.convertToType(data['owner_id'], 'String');
      }
      if (data.hasOwnProperty('token_type')) {
        obj['token_type'] = ApiClient.convertToType(data['token_type'], 'String');
      }
      if (data.hasOwnProperty('expires_in')) {
        obj['expires_in'] = ApiClient.convertToType(data['expires_in'], 'Integer');
      }
      if (data.hasOwnProperty('refresh_token')) {
        obj['refresh_token'] = ApiClient.convertToType(data['refresh_token'], 'String');
      }
      if (data.hasOwnProperty('refresh_token_expires_in')) {
        obj['refresh_token_expires_in'] = ApiClient.convertToType(data['refresh_token_expires_in'], 'Integer');
      }
      if (data.hasOwnProperty('access_token')) {
        obj['access_token'] = ApiClient.convertToType(data['access_token'], 'String');
      }
    }
    return obj;
  }


  /**
   * Unique identifier of a client application passed by the client, or auto-generated by server if not specified in request
   * @member {String} endpoint_id
   */
  exports.prototype['endpoint_id'] = undefined;

  /**
   * List of permissions allowed with this access token, white-space separated
   * @member {String} scope
   */
  exports.prototype['scope'] = undefined;

  /**
   * Extension identifier
   * @member {String} owner_id
   */
  exports.prototype['owner_id'] = undefined;

  /**
   * Type of token. Use this parameter in Authorization header of requests
   * @member {String} token_type
   */
  exports.prototype['token_type'] = undefined;

  /**
   * Issued access token TTL (time to live), in seconds
   * @member {Integer} expires_in
   */
  exports.prototype['expires_in'] = undefined;

  /**
   * Refresh token to get a new access token, when the issued one expires
   * @member {String} refresh_token
   */
  exports.prototype['refresh_token'] = undefined;

  /**
   * Issued refresh token TTL (time to live), in seconds
   * @member {Integer} refresh_token_expires_in
   */
  exports.prototype['refresh_token_expires_in'] = undefined;

  /**
   * Access token to pass to subsequent API requests
   * @member {String} access_token
   */
  exports.prototype['access_token'] = undefined;




  return exports;
}));
